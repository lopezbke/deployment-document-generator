{"version":3,"sources":["logo.svg","components/Deploymentform/Deploymentform.js","components/Userinputform/Userinputform.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","printToPdf","window","print","Deploymentform","react_default","a","createElement","className","id","type","onClick","defaultProps","GenerateForm","parameters","VerifyInputAndGetParameters","console","log","document","getElementById","classList","remove","requireFieldsModal","fromDate","toDate","branch","organization","project","repoId","value","add","modalClose","Userinputform","aria-label","inputparameter","App","components_Userinputform_Userinputform","components_Deploymentform_Deploymentform","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.245ee66b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Deploymentform.css';\n\nconst printToPdf = () => {\n  window.print();\n};\n\nconst Deploymentform = () => {\n  return (\n    <div className='deploymentForm is-hidden' id='deploymentForm'>\n     <div className='headingDiv'>\n      <h1 className='is-size-3'>Deployment Form</h1>\n     </div>\n      <div className='box'>\n        <div className='gridTwo'>\n          <div>\n          <label>Commits: </label>\n            <textarea className='textarea'></textarea>\n          </div>\n          <div>\n          <label>Developers: </label>\n            <textarea className='textarea'></textarea>\n          </div>\n        </div>\n        <div>\n          <label>Details/Short Description: </label>\n          <textarea className='textarea'></textarea>\n        </div>\n        <div>\n          <label>Files affected: </label>\n          <textarea className='textarea'></textarea>\n        </div>\n        <div>\n          <label>DataBase: </label>\n          <textarea className='textarea'></textarea>\n        </div>\n        <div>\n          <label>Enviroment: </label>\n            <input className='input' type={'text'}></input>\n          </div>\n        <br></br>\n        <div className='gridTwo'>\n          <div>\n          <label>Deployed By: </label>\n            <input className='input' type={'text'}></input>\n          </div>\n          <div>\n          <label>Deployment Time: </label>\n            <input className='input' type={'datetime-local'}></input>\n          </div>\n        </div>\n        <br></br>\n        <div>\n          <label>Comments/Additional Notes: </label>\n          <textarea className='textarea'></textarea>\n        </div>\n        <div className='printBtnDiv no-print'>\n          <button className='button is-primary' onClick={printToPdf}>Print PDF</button>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nDeploymentform.propTypes = {};\n\nDeploymentform.defaultProps = {};\n\nexport default Deploymentform;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Userinputform.css';\n\n\nconst GenerateForm = () => {\n  let parameters = VerifyInputAndGetParameters();\n  if (parameters != null) {\n    console.log(parameters);\n    document.getElementById('deploymentForm').classList.remove('is-hidden');\n  }\n};\n\nconst VerifyInputAndGetParameters = () => {\n  const requireFieldsModal = document.getElementById('requiredFieldsModal');\n  let parameters = {\n    fromDate: '',\n    toDate: '',\n    branch: '',\n    organization: '',\n    project: '',\n    repoId: ''\n  };\n  parameters.fromDate = document.getElementById('fromDate').value;\n  parameters.toDate = document.getElementById('toDate').value;\n  parameters.branch = document.getElementById('branch').value;\n  parameters.organization = document.getElementById('organization').value;\n  parameters.project = document.getElementById('project').value;\n  parameters.repoId = document.getElementById('repoId').value;\n\n  if (parameters.fromDate === '') {\n    requireFieldsModal.classList.add('is-active');\n    return null;\n  }\n  if (parameters.toDate === '') {\n    requireFieldsModal.classList.add('is-active');\n    return null;\n  }\n  if (parameters.branch === '') {\n    requireFieldsModal.classList.add('is-active');\n    return null;\n  }\n  if (parameters.organization === '') {\n    requireFieldsModal.classList.add('is-active');\n    return null;\n  }\n  if (parameters.project === '') {\n    requireFieldsModal.classList.add('is-active');\n    return null;\n  }\n  if (parameters.repoId === '') {\n    requireFieldsModal.classList.add('is-active');\n    return null;\n  }\n  return parameters;\n}\n\nconst modalClose = () => {\n  document.getElementById('requiredFieldsModal').classList.remove(\"is-active\");\n};\nconst Userinputform = () => {\n  return (\n    <div className=\"Userinputform no-print\">\n      <div id=\"requiredFieldsModal\" className='modal'>\n        <div className=\"modal-background\"></div>\n\n        <div className=\"modal-content\">\n          <div className=\"box\">\n            <div className='modal-header-div'>\n              <button className=\"delete has-background-danger-dark\" aria-label=\"close\" type='button' onClick={modalClose}></button>\n            </div>\n            <p>Please enter required fields.</p>\n          </div>\n        </div>\n      </div>\n      <div className='box'>\n        <div>\n          <h1 className='is-size-3'>Deployment Form Paremeters</h1>\n        </div>\n        {/* Paremeters */}\n        <div>\n          <label>Organization: </label>\n          <input id='organization' className='input' type={'text'} inputparameter='true'></input>\n        </div>\n        <div>\n          <label>Project: </label>\n          <input id='project' className='input' type={'text'} inputparameter='true'></input>\n        </div>\n        <div>\n          <label>Repo ID: </label>\n          <input id='repoId' className='input' type={'text'} inputparameter='true'></input>\n        </div>\n\n        {/* Gettings commits by date from the default branch */}\n        <div className='gridTwo'>\n          <div>\n            <label>From: </label>\n            <input id='fromDate' className='input' type={'date'} inputparameter='true'></input>\n          </div>\n          <div>\n            <label>To: </label>\n            <input id='toDate' className='input' type={'date'} inputparameter='true'></input>\n          </div>\n        </div>\n        {/* Gettings commits by branch */}\n        <div>\n          <label>Branch: </label>\n          <input id='branch' className='input' type={'text'} inputparameter='true'></input>\n        </div>\n        {/* Generate Form */}\n        <div className='generateFormBtnDiv'>\n          <button className='button is-primary' onClick={GenerateForm}>Generate Form</button>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nUserinputform.propTypes = {};\n\nUserinputform.defaultProps = {};\n\nexport default Userinputform;\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component }  from 'react';\nimport Deploymentform from './components/Deploymentform/Deploymentform';\nimport Userinputform from './components/Userinputform/Userinputform';\nimport 'bulma/css/bulma.min.css';\nfunction App() {\n  return (\n    <div className=\"App container is-max-desktop\">\n      <br></br>\n      <Userinputform></Userinputform>   \n        <Deploymentform></Deploymentform>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}